Декораторы:
на примере легенды о создании шахмат: написали двух "казначеев", которые высчитывают сколько зерен запросил в качестве нанрады дравид
вычислили время выполнения работы програм "казначеев" и что оно разное, что использование низкоуровневых конструкций успоряет работу (Пригодится, когда будем писать игры)
познакомились с list comprehension. : l = [2**x for x in range(64)] 
обсудили важность чистоты кода и такие принципы проэктирования как:
  1) ""Единая ответственность функций"": Функции должны содержать только тот код, для которой они собственно и создавались (наши казначеи только высчитывают колличество зерен и не должны одновременно еще и засекать себе таймером время своей работы)
  2) Принцип DRY - Don’t repeat yourself глава 2 раздел 7 в книге ""Программист-прагматик"" Эндрю Ханта и Дэвида Томаса (будем читать, но позже)"
